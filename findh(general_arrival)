# Solve LP in general arrival setting. The optimized ratio is precise only when n->infinity. So the result is approximate in the LP. However, we only use it to guide use solving the form of h, instead of using it to claim a formal lower bound of the competitive ratio. 
using Gurobi
using JuMP
lpRatio = Model(with_optimizer(Gurobi.Optimizer))
n=300
eeps=1//n

@variable(lpRatio, ratio >= 0)
@objective(lpRatio, Max, ratio)

@variable(lpRatio, h[0:eeps:1,0:eeps:1] >= 0)

for y=eeps:eeps:1
    @constraint(lpRatio, h[y,1] <= 1)
    for x=y+eeps:eeps:1
        @constraint(lpRatio, h[y,x] >= h[y,x-eeps])
    end
    for x=eeps:eeps:y
        @constraint(lpRatio, h[x-eeps,y] <= h[x,y])
    end
end


for av=eeps:eeps:1
    for pv=av:eeps:1
        @constraint(lpRatio, ratio <= pv*h[av,pv] - eeps*sum(h[av,z] for z=av:eeps:pv-eeps) + (1-pv)*h[1-pv,1-pv])
    end
end

status = optimize!(lpRatio)

println("Objective value: ", getobjectivevalue(lpRatio))